{"version":3,"file":"home.7f61c504.js","sources":["../../src/data/validator.jsx","../../src/pages/modules/serie-item.jsx","../../src/pages/modules/error.jsx","../../src/pages/home.jsx"],"sourcesContent":["export const isValidName = name => /^[^\\/[\\]\\\\=`@#\\%\\$^+{}|<>?]+$/.test(name)\n","import { createSignal, Show } from 'solid-js'\n\nimport '../general.sass'\nimport './serie-item.sass'\n\n/**\n * @argument index: number\n * @argument serie: { name: string }\n * @argument removeSerie(index: number): void\n * @argument goToSerie(name: string): void\n * @argument renameSerie(name: string, index: number): void\n * @argument checkNewName(name: string, success: (name: string) => void): void\n */\nexport default (params) => {\n\tconst [name, setName] = createSignal(params.serie.name)\n\tconst [newName, setNewName] = createSignal(name())\n\tconst [edit, setEdit] = createSignal(false)\n\tfunction onEdit() {\n\t\tif (edit()) {\n\t\t\tconst trimmedName = newName().trim()\n\t\t\tif (trimmedName === name()) {\n\t\t\t\tcloseEdit()\n\t\t\t\treturn\n\t\t\t}\n\t\t\tparams.checkNewName(trimmedName, () => {\n\t\t\t\tparams.renameSerie(trimmedName, params.index())\n\t\t\t\tsetName(trimmedName)\n\t\t\t\tsetEdit(e => !e)\n\t\t\t})\n\t\t} else\n\t\t\tsetEdit(e => !e)\n\t}\n\tfunction closeEdit() {\n\t\tsetEdit(false)\n\t\tsetNewName(name())\n\t}\n\treturn <>\n\t\t<div class='serie-item flex-stack'>\n\t\t\t<div class='button-stack'>\n\t\t\t\t<button class='left-button' onClick={() => params.removeSerie(params.index())}>\n\t\t\t\t\t<img class='center-image' src='/remove.svg'></img>\n\t\t\t\t</button>\n\t\t\t\t<button id='serie-name' class='middle-button' onClick={() => params.goToSerie(name())}>{name()}</button>\n\t\t\t\t<button class={`${edit() ? 'rect-button' : 'right-button'}`} onClick={() => onEdit()}>\n\t\t\t\t\t<img class='center-image' src={edit() ? '/check.svg' : '/edit.svg'}></img>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class='button-stack'>\n\t\t\t\t<Show when={edit()}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='edit-input'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tmaxLength={30}\n\t\t\t\t\t\tvalue={newName()}\n\t\t\t\t\t\tplaceholder='Edit Serie Name'\n\t\t\t\t\t\tonInput={e => setNewName(e.currentTarget.value)}>\n\t\t\t\t\t</input>\n\t\t\t\t\t<button class='right-button' onClick={() => closeEdit()}>\n\t\t\t\t\t\t<img class='center-image' src='/close.svg'></img>\n\t\t\t\t\t</button>\n\t\t\t\t</Show>\n\t\t\t</div>\n\t\t</div>\n\t</>\n}\n","export const info = message => alert(message)\nexport const invalidSerieNameError = () => info('Error: Invalid Serie Name!')\nexport const serieIsSavedBeforeError = () => info('Error: Serie is saved before!')\n","import { createSignal, For } from 'solid-js'\nimport { useNavigate } from 'solid-app-router';\n\nimport { createLocalStore, removeFromStore } from '../data/store'\nimport { isValidName } from '../data/validator'\n\nimport SerieItem from './modules/serie-item'\nimport { invalidSerieNameError, serieIsSavedBeforeError } from './modules/error';\n\nimport './general.sass'\nimport './home.sass'\n\nexport default () => {\n\tconst [name, setName] = createSignal('')\n\tconst [series, setSeries] = createLocalStore('Series')\n\tconst navigate = useNavigate()\n\tconst addSerie = () => checkNewName(name(), name => {\n\t\tsetSeries([...series, { name: name, seasons: [] }])\n\t\tsetName('')\n\t})\n\tfunction checkNewName(name, success) {\n\t\tif (isSerieSaved(name))\n\t\t\tserieIsSavedBeforeError()\n\t\telse if (isValidName(name))\n\t\t\tsuccess(name)\n\t\telse\n\t\t\tinvalidSerieNameError()\n\t}\n\tconst isSerieSaved = name => series.map(it => it.name).includes(name)\n\tconst goToSerie = serie => navigate('serie/' + serie)\n\tconst removeSerie = index => setSeries(removeFromStore(series, index))\n\tconst renameSerie = (name, index) => setSeries(index, 'name', name)\n\treturn <div class='Home'>\n\t\t<div class='button-stack'>\n\t\t\t<input\n\t\t\t\tid='serie-input'\n\t\t\t\ttype='text'\n\t\t\t\tmaxLength={30}\n\t\t\t\tvalue={name()}\n\t\t\t\tplaceholder='New Serie'\n\t\t\t\tonInput={e => setName(e.currentTarget.value)}>\n\t\t\t</input>\n\t\t\t<button class='right-button' onClick={addSerie}>\n\t\t\t\t<img class='center-image' src='/add.svg'></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<For each={series}>{(serie, index) =>\n\t\t\t<SerieItem serie={serie} index={index} goToSerie={goToSerie} removeSerie={removeSerie}\n\t\t\t\trenameSerie={renameSerie} checkNewName={checkNewName} />\n\t\t}\n\t\t</For>\n\t</div>\n}\n"],"names":["isValidName","name","test","SerieItem","params","setName","createSignal","serie","newName","setNewName","edit","setEdit","onEdit","trimmedName","trim","closeEdit","checkNewName","renameSerie","index","e","_el$","_tmpl$3","_el$2","_el$3","_el$4","_el$5","_el$6","_el$7","removeSerie","goToSerie","_$insert","_$createComponent","Show","_el$8","_tmpl$","currentTarget","value","_$effect","_el$9","_tmpl$2","_p$","_v$","_v$2","_$className","_$setAttribute","_$delegateEvents","info","message","alert","invalidSerieNameError","serieIsSavedBeforeError","home","series","setSeries","createLocalStore","navigate","useNavigate","addSerie","seasons","success","isSerieSaved","map","it","includes","removeFromStore","For"],"mappings":"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"}