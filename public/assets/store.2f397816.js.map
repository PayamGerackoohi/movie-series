{"version":3,"file":"store.2f397816.js","sources":["../../node_modules/.pnpm/solid-js@1.5.1/node_modules/solid-js/store/dist/store.js","../../src/data/store.jsx"],"sourcesContent":["import { $PROXY, $TRACK, getListener, batch, createSignal } from 'solid-js';\n\nconst $RAW = Symbol(\"store-raw\"),\n      $NODE = Symbol(\"store-node\"),\n      $NAME = Symbol(\"store-name\");\nfunction wrap$1(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps$1)\n    });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value),\n            desc = Object.getOwnPropertyDescriptors(value);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const prop = keys[i];\n        if (desc[prop].get) {\n          const get = desc[prop].get.bind(p);\n          Object.defineProperty(value, prop, {\n            get\n          });\n        }\n      }\n    }\n  }\n  return p;\n}\nfunction isWrappable(obj) {\n  let proto;\n  return obj != null && typeof obj === \"object\" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW]) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);\n    const keys = Object.keys(item),\n          desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes) Object.defineProperty(target, $NODE, {\n    value: nodes = {}\n  });\n  return nodes;\n}\nfunction getDataNode(nodes, property, value) {\n  return nodes[property] || (nodes[property] = createDataNode(value));\n}\nfunction proxyDescriptor(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME) return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction trackSelf(target) {\n  if (getListener()) {\n    const nodes = getDataNodes(target);\n    (nodes._ || (nodes._ = createDataNode()))();\n  }\n}\nfunction ownKeys(target) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\nfunction createDataNode(value) {\n  const [s, set] = createSignal(value, {\n    equals: false,\n    internal: true\n  });\n  s.$ = set;\n  return s;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getDataNodes(target);\n    const tracked = nodes.hasOwnProperty(property);\n    let value = tracked ? nodes[property]() : target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (getListener() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getDataNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap$1(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\") return true;\n    const tracked = getDataNodes(target)[property];\n    tracked && tracked();\n    return property in target;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  ownKeys: ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction setProperty(state, property, value, deleting = false) {\n  if (!deleting && state[property] === value) return;\n  const prev = state[property];\n  const len = state.length;\n  if (value === undefined) {\n    delete state[property];\n  } else state[property] = value;\n  let nodes = getDataNodes(state),\n      node;\n  if (node = getDataNode(nodes, property, prev)) node.$(() => value);\n  if (Array.isArray(state) && state.length !== len) (node = getDataNode(nodes, \"length\", len)) && node.$(state.length);\n  (node = nodes._) && node.$();\n}\nfunction mergeStoreNode(state, value) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updateArray(current, next) {\n  if (typeof next === \"function\") next = next(current);\n  next = unwrap(next);\n  if (Array.isArray(next)) {\n    if (current === next) return;\n    let i = 0,\n        len = next.length;\n    for (; i < len; i++) {\n      const value = next[i];\n      if (current[i] !== value) setProperty(current, i, value);\n    }\n    setProperty(current, \"length\", len);\n  } else mergeStoreNode(current, next);\n}\nfunction updatePath(current, path, traversed = []) {\n  let part,\n      prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n          isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeStoreNode(prev, value);\n  } else setProperty(current, part, value);\n}\nfunction createStore(...[store, options]) {\n  const unwrappedStore = unwrap(store || {});\n  const isArray = Array.isArray(unwrappedStore);\n  const wrappedStore = wrap$1(unwrappedStore);\n  function setStore(...args) {\n    batch(() => {\n      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\n    });\n  }\n  return [wrappedStore, setStore];\n}\n\nconst proxyTraps = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getDataNodes(target);\n    const tracked = nodes.hasOwnProperty(property);\n    let value = tracked ? nodes[property]() : target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      const isFunction = typeof value === \"function\";\n      if (getListener() && (!isFunction || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getDataNode(nodes, property, value)();else if (value != null && isFunction && value === Array.prototype[property]) {\n        return (...args) => batch(() => Array.prototype[property].apply(receiver, args));\n      }\n    }\n    return isWrappable(value) ? wrap(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\") return true;\n    const tracked = getDataNodes(target)[property];\n    tracked && tracked();\n    return property in target;\n  },\n  set(target, property, value) {\n    batch(() => setProperty(target, property, unwrap(value)));\n    return true;\n  },\n  deleteProperty(target, property) {\n    batch(() => setProperty(target, property, undefined, true));\n    return true;\n  },\n  ownKeys: ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction wrap(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps)\n    });\n    const keys = Object.keys(value),\n          desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set,\n              set = v => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction createMutable(state, options) {\n  const unwrappedStore = unwrap(state || {});\n  const wrappedStore = wrap(unwrappedStore);\n  return wrappedStore;\n}\nfunction modifyMutable(state, modifier) {\n  batch(() => modifier(unwrap(state)));\n}\n\nconst $ROOT = Symbol(\"store-root\");\nfunction applyState(target, parent, property, merge, key) {\n  const previous = parent[property];\n  if (target === previous) return;\n  if (!isWrappable(target) || !isWrappable(previous) || key && target[key] !== previous[key]) {\n    if (target !== previous) {\n      if (property === $ROOT) return target;\n      setProperty(parent, property, target);\n    }\n    return;\n  }\n  if (Array.isArray(target)) {\n    if (target.length && previous.length && (!merge || key && target[0][key] != null)) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      for (start = 0, end = Math.min(previous.length, target.length); start < end && (previous[start] === target[start] || key && previous[start][key] === target[start][key]); start++) {\n        applyState(target[start], previous, start, merge, key);\n      }\n      const temp = new Array(target.length),\n            newIndices = new Map();\n      for (end = previous.length - 1, newEnd = target.length - 1; end >= start && newEnd >= start && (previous[end] === target[newEnd] || key && previous[end][key] === target[newEnd][key]); end--, newEnd--) {\n        temp[newEnd] = previous[end];\n      }\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\nfunction reconcile(value, options = {}) {\n  const {\n    merge,\n    key = \"id\"\n  } = options,\n        v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    const res = applyState(v, {\n      [$ROOT]: state\n    }, $ROOT, merge, key);\n    return res === undefined ? state : res;\n  };\n}\nconst producers = new WeakMap();\nconst setterTraps = {\n  get(target, property) {\n    if (property === $RAW) return target;\n    const value = target[property];\n    let proxy;\n    return isWrappable(value) ? producers.get(value) || (producers.set(value, proxy = new Proxy(value, setterTraps)), proxy) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined, true);\n    return true;\n  }\n};\nfunction produce(fn) {\n  return state => {\n    if (isWrappable(state)) {\n      let proxy;\n      if (!(proxy = producers.get(state))) {\n        producers.set(state, proxy = new Proxy(state, setterTraps));\n      }\n      fn(proxy);\n    }\n    return state;\n  };\n}\n\nexport { $RAW, createMutable, createStore, modifyMutable, produce, reconcile, unwrap };\n","import { createEffect, createSignal } from 'solid-js';\nimport { createStore } from \"solid-js/store\"\n\nexport function createLocalSignal(name, init) {\n\tconst local = localStorage.getItem(name)\n\tconst [signal, setSignal] = createSignal(local || init)\n\tcreateEffect(() => localStorage.setItem(name, signal()))\n\treturn [signal, setSignal]\n}\n\nexport function createLocalStore(name, init = [], fields = undefined) {\n\tconst local = localStorage.getItem(name)\n\tconst [store, setStore] = createStore(local ? JSON.parse(local) : init)\n\tcreateEffect(() => localStorage.setItem(name, JSON.stringify(store, fields)))\n\treturn [store, setStore]\n}\n\nexport const removeFromStore = (list, index) => [...list.slice(0, index), ...list.slice(index + 1)]\n"],"names":["$RAW","$NODE","$NAME","wrap$1","value","name","p","$PROXY","proxyTraps$1","keys","desc","i","l","prop","get","isWrappable","obj","proto","unwrap","item","set","result","unwrapped","v","getDataNodes","target","nodes","getDataNode","property","createDataNode","proxyDescriptor","trackSelf","getListener","ownKeys","s","createSignal","receiver","$TRACK","tracked","setProperty","state","deleting","prev","len","node","mergeStoreNode","key","updateArray","current","next","updatePath","path","traversed","part","partType","isArray","from","to","by","createStore","store","options","unwrappedStore","wrappedStore","setStore","args","batch","producers","setterTraps","proxy","produce","fn","createLocalSignal","init","local","localStorage","getItem","signal","setSignal","createEffect","setItem","createLocalStore","fields","undefined","JSON","parse","stringify","removeFromStore","list","index","slice"],"mappings":"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"}